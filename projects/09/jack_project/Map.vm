function Map.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Map.dispose 0
push argument 0
pop pointer 0
push this 1
call Position.dispose 1
pop temp 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Map.getName 0
push argument 0
pop pointer 0
push this 2
return
function Map.getStartPos 0
push argument 0
pop pointer 0
push this 1
return
function Map.isEmpty 1
push argument 0
pop pointer 0
push argument 1
call Position.getY 1
push constant 32
call Math.multiply 2
push argument 1
call Position.getX 1
add
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
return
function Map.checkWall 1
push argument 0
pop pointer 0
push argument 1
call Position.getY 1
push constant 32
call Math.multiply 2
push argument 1
call Position.getX 1
add
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
return
function Map.checkBoulder 1
push argument 0
pop pointer 0
push argument 1
call Position.getY 1
push constant 32
call Math.multiply 2
push argument 1
call Position.getX 1
add
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
return
function Map.checkEscape 1
push argument 0
pop pointer 0
push argument 1
call Position.getY 1
push constant 32
call Math.multiply 2
push argument 1
call Position.getX 1
add
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 3
eq
return
function Map.checkTrap 0
push argument 0
pop pointer 0
push constant 0
return
function Map.moveBoulder 3
push argument 0
pop pointer 0
push argument 1
call Position.getY 1
push constant 32
call Math.multiply 2
push argument 1
call Position.getX 1
add
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
push constant 2
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Position.getRight 1
pop local 0
label IF_FALSE1
push argument 2
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
call Position.getDown 1
pop local 0
label IF_FALSE2
push argument 2
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
call Position.getLeft 1
pop local 0
label IF_FALSE3
push argument 2
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
call Position.getUp 1
pop local 0
label IF_FALSE4
push local 0
call Position.getY 1
push constant 32
call Math.multiply 2
push local 0
call Position.getX 1
add
pop local 2
push pointer 0
push local 0
call Map.isEmpty 2
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
call Position.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE5
push local 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Position.dispose 1
pop temp 0
push constant 0
not
return
function Map.draw 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 512
lt
not
if-goto WHILE_END0
push local 0
push constant 32
call Math.divide 2
pop local 2
push local 0
push local 2
push constant 32
call Math.multiply 2
sub
pop local 1
push local 1
push local 2
push local 0
push this 0
add
pop pointer 1
push that 0
call MapDrawer.draw 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push constant 32
push constant 3
sub
call Output.moveCursor 2
pop temp 0
push this 2
call Output.printString 1
pop temp 0
push constant 0
return
