// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    /** Initializes the keyboard. */
    function void init() {
      return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      var int c;

      let c = Memory.peek(24576);

      return c;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
      var char c;

      let c = Keyboard.keyPressed();
      while (c = 0) {
        let c = Keyboard.keyPressed();
      }

      while (~(Keyboard.keyPressed() = 0)) { }

      if (c = 10) {
        do Output.println();
      } else {
        if (~((c < 32) | (c > 127))) {
          do Output.printChar(c);
        }
      }
      return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var String s;
      var char c;

      do Output.printString(message);

      let s = String.new(64);
      let c = Keyboard.readChar();
      while (~(c = String.newLine())) {
        if (c = String.backSpace()) {
          do Output.backSpace();
          do s.eraseLastChar();
        } else {
          do s.appendChar(c);
        }

        let c = Keyboard.readChar();
      }

      return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
      var String s;
      var int res, mult, i, j;
      var boolean is_num, neg;

      do Output.printString(message);

      let s = Keyboard.readLine(message);

      let i = 0;
      let res = 0;
      if (s.charAt(i) = 45) {
        let i = i + 1;
      }
      let is_num = true;
      while ((i < s.length()) & is_num) {
        if ((s.charAt(i) > 47) & (s.charAt(i) < 58)) {
          let i = i + 1;
        } else {
          let is_num = false;
        }
      }

      while (j < i) {
        let res = res * 10;

        if (s.charAt(j) = 45) {
          let neg = true;
        } else {
          let res = res + (s.charAt(j) - 48);
        }
        let j = j + 1;
      }

      if (neg) {
        let res = res * (-1);
      }

      return res;
    }
}
